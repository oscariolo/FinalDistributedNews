services:
  haproxy:
    image: haproxy:latest
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - ./configs/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    restart: unless-stopped
    depends_on:
      - zilla1
      - zilla2
      - backend1
      - backend2
  
  kafka:
    image: apache/kafka:3.8.0
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:9093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
  
  zilla1:
    image: ghcr.io/aklivity/zilla:latest
    pull_policy: always
    depends_on:
      - kafka
      - fluent-bit
    ports:
      - "7115:7114"
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka:29092"
    volumes:
      - ./configs/zilla.yaml:/etc/zilla/zilla.yaml
    command: start -v -e
    restart: unless-stopped
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.zilla1
  
  zilla2:
    image: ghcr.io/aklivity/zilla:latest
    pull_policy: always
    depends_on:
      - kafka
      - fluent-bit
    ports:
      - "7116:7114"
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka:29092"
    volumes:
      - ./configs/zilla.yaml:/etc/zilla/zilla.yaml
    command: start -v -e
    restart: unless-stopped
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.zilla2

  backend1:
    build: ./distributednewsbackend
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - ollama
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      OLLAMA_MODEL: llama2
      SPRING_AI_OLLAMA_BASE_URL: http://ollama:11434
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/newsdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: news1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_INSTANCE: backend1
      LOGGING_FILE_NAME: /var/log/spring/backend1.log
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_EXAMPLE_DISTRIBUTEDNEWSBACKEND: DEBUG
    volumes:
      - springlogs:/var/log/spring
    restart: unless-stopped
  
  backend2:
    build: ./distributednewsbackend
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - ollama
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      OLLAMA_MODEL: llama2
      SPRING_AI_OLLAMA_BASE_URL: http://ollama:11434
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/newsdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: news1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_INSTANCE: backend2
      LOGGING_FILE_NAME: /var/log/spring/backend2.log
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_EXAMPLE_DISTRIBUTEDNEWSBACKEND: DEBUG
    volumes:
      - springlogs:/var/log/spring
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: newsdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: news1234
    ports:
      - "5432:5432"
    volumes:
      - news-database:/var/lib/postgresql/data
    restart: unless-stopped
  
  distributednews-frontend:
    build: ./distributednewsfrontend
    ports:
      - "3000:3000"
    depends_on:
      - haproxy
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8080
    restart: unless-stopped
  
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/ollama
    environment:
      OLLAMA_MODEL: llama2
    restart: unless-stopped
  
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    ports:
      - "24224:24224"
    volumes:
      - springlogs:/var/log/spring:ro
      - fluentlogs:/var/log/fluent-bit
      - ./configs/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./configs/etc/add_service.lua:/fluent-bit/etc/add_service.lua:ro
    depends_on:
      - loki
    command: /fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.conf
    restart: unless-stopped
  
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - ./configs/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    depends_on:
      - loki
    restart: unless-stopped
  
  news-generator:
    image: confluentinc/cp-kafkacat:7.1.9
    command:
      - /bin/sh
      - -c
      - |
        while true; do 
          echo '{"title": "Breaking News", "content": "News at '$(date)'", "category": "general"}' | kafkacat -P -b kafka:29092 -t news-general -k "news-$(date +%s)"
          echo "News sent, waiting 10 seconds..."
          sleep 10
        done
    depends_on:
      - kafka
    profiles:
      - testing

volumes:
  news-database:
  springlogs:
  fluentlogs: